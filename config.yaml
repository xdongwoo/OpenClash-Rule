proxy-providers:
  BitzNet:
    url: "https://f2.bbdmfetch.com/api/v1/client/subscribe?token=957054d53e772403d7da51a6f652f9b2"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    header:
      User-Agent:
      - "Clash"
proxies:
  - {name: 直连, type: direct}
port: 8080
socks-port: 1080
allow-lan: true
mode: rule
log-level: info
external-controller: '[::]:9090'
find-process-mode: off
global-client-fingerprint: chrome
# interface-name: eth0
ipv6: true
unified-delay: true
tcp-concurrent: true
disable-keep-alive: false
keep-alive-idle: 600
keep-alive-interval: 15
external-ui: ui
external-ui-name: metacubex
external-ui-url: https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip
secret: wxd@198601
mixed-port: 7890
redir-port: 7891
tproxy-port: 7892
authentication:
  - xdongwoo:wxd@198601
tun:
  enable: false
dns:
  enable: true
  listen: '[::]:1053'
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - +.lan
    - +.local
    - 'geosite: cn'
  fake-ip-filter-mode: blacklist
  respect-rules: true
  prefer-h3: false
  use-system-hosts: false
  use-hosts: true
  default-nameserver:
    - 202.103.224.68
    - 211.138.245.180
  proxy-server-nameserver:
    - 202.103.224.68
    - 211.138.245.180
  nameserver:
    - 202.103.224.68
    - 211.138.245.180
  fallback:
    - 1.1.1.1
    - 8.8.8.8
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
profile:
  store-selected: true
  store-fake-ip: true
geodata-mode: false
geodata-loader: standard
geox-url:
  geosite: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat
  mmdb: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb
  geoip: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat
  asn: https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb
geo-auto-update: true
geo-update-interval: 48
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇺🇲 美国节点, 🇨🇦 加拿大节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇩🇪 德国节点, 🇦🇺 澳大利亚节点, 🇷🇺 俄罗斯/乌克兰节点, 🇹🇷 土耳其节点, 🇲🇾 马来西亚节点, 🇹🇭 泰国节点, 🇮🇳 印度节点, 南美节点, 非洲节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🤖 AI, type: select, proxies: [♻️ 北美自动, 🇦🇺 澳大利亚节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 👨🏿‍💻 GitHub, type: select, proxies: [♻️ 自动选择]}
  - {name: 📹 YouTube, type: select, proxies: [🇨🇳 台湾节点, ♻️ 北美自动, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🍀 Google, type: select, proxies: [🇨🇳 台湾节点, ♻️ 北美自动, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🐳 Docker, type: select, proxies: [♻️ 北美自动, 🇦🇺 澳大利亚节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🎮 Game, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇲🇾 马来西亚节点, 🇵🇭 菲律宾节点, 🇹🇭 泰国节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🐬 OneDrive, type: select, proxies: [♻️ 北美自动, 🇦🇺 澳大利亚节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: Ⓜ️ Microsoft, type: select, proxies: [直连]}
  - {name: 🎵 TikTok, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇲🇾 马来西亚节点, 🇵🇭 菲律宾节点, 🇹🇭 泰国节点, 🇺🇲 美国节点, 🇨🇦 加拿大节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 📲 Telegram, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇲🇾 马来西亚节点, 🇵🇭 菲律宾节点, 🇹🇭 泰国节点, 🇺🇲 美国节点, 🇨🇦 加拿大节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 🎥 NETFLIX, type: select, proxies: [🎥 奈飞节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 💶 PayPal, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 新加坡节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇲🇾 马来西亚节点, 🇵🇭 菲律宾节点, 🇹🇭 泰国节点, 🇺🇲 美国节点, 🇨🇦 加拿大节点, ♻️ 自动选择, 🌐 全部节点]}
  - {name: 📺 Bahamut, type: select, proxies: [🇨🇳 台湾节点, 🌐 全部节点]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [直连, ♻️ 自动选择]}  
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇨🇳 台湾节点, type: select, include-all: true, filter: "(?i)台|新北|彰化|tw|taiwan|tai wan"}
  - {name: 🇸🇬 新加坡节点, type: select, include-all: true, filter: "(?i)新加坡|坡|狮城|sg|singapore"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|japan"}
  - {name: 🇰🇷 韩国节点, type: select, include-all: true, filter: "(?i)韩|韓|首尔|kr|korea|kor"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|unitedstates|united states"}
  - {name: 🇨🇦 加拿大节点, type: select, include-all: true, filter: "(?i)加|ca|canada"}
  - {name: 🇬🇧 英国节点, type: select, include-all: true, filter: "(?i)英|uk|gb|great britian|greatbritian"}
  - {name: 🇫🇷 法国节点, type: select, include-all: true, filter: "(?i)法|fr|france"}
  - {name: 🇩🇪 德国节点, type: select, include-all: true, filter: "(?i)德|ge|german"}
  - {name: 🇦🇺 澳大利亚节点, type: select, include-all: true, filter: "(?i)澳大利亚|au|austrilia"}
  - {name: 🇷🇺 俄罗斯/乌克兰节点, type: select, include-all: true, filter: "(?i)俄|乌克兰|ru|russia"}
  - {name: 🇹🇷 土耳其节点, type: select, include-all: true, filter: "(?i)土|tu|turkey"}
  - {name: 🇲🇾 马来西亚节点, type: select, include-all: true, filter: "(?i)马|my|malaysia"}
  - {name: 🇵🇭 菲律宾节点, type: select, include-all: true, filter: "(?i)菲|ph|philippine"}
  - {name: 🇹🇭 泰国节点, type: select, include-all: true, filter: "(?i)泰|th|thailand"}
  - {name: 🇮🇳 印度节点, type: select, include-all: true, filter: "(?i)印|india"}
  - {name: 南美节点, type: select, include-all: true, filter: "(?i)巴西|阿根廷"}
  - {name: 非洲节点, type: select, include-all: true, filter: "(?i)尼日利亚"}
  - {name: 🎥 奈飞节点, type: select, include-all: true, filter: "(?i)|奈飞|解锁|nf|netflix|media"}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$"}
  - {name: ♻️ 北美自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|unitedstates|united states|加|ca|canada"}
  - {name: 🌐 全部节点, type: select, include-all: true}
rules:
  - RULE-SET,private_proxy,🚀 默认代理
  - RULE-SET,private_direct,直连
  - RULE-SET,private_ip,直连
  - RULE-SET,private_domain,直连
  - RULE-SET,ai,🤖 AI
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,docker_domain,🐳 Docker
  - RULE-SET,steamCN_domain,直连
  - RULE-SET,steam_domain,🎮 Game
  - RULE-SET,epic_domain,🎮 Game
  - RULE-SET,origin_domain,🎮 Game
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,Ⓜ️ Microsoft
  - RULE-SET,apple_domain,直连
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,bahamut_domain,📺 Bahamut
  - RULE-SET,apple_ip,直连,no-resolve
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,直连
  - RULE-SET,cn_ip,直连
  - MATCH,🐟 漏网之鱼  
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  classical: &classical {type: http, interval: 86400, behavior: classical, format: text}
rule-providers:
  private_proxy: { <<: *classical, url: "https://raw.githubusercontent.com/xdongwoo/OpenClash-Rule/refs/heads/main/Proxy.list"}
  private_direct: { <<: *classical, url: "https://raw.githubusercontent.com/xdongwoo/OpenClash-Rule/refs/heads/main/Direct.list"}
  private_ip: {<<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geoip/private.mrs"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  ai: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  docker_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/docker.mrs"}
  steamCN_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam@cn.mrs"}
  steam_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  epic_domain: { <<: *classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/epicgames.mrs"}
  origin_domain: { <<: *classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/origin.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  bahamut_domain: { <<: *classical, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.mrs"}
  apple_ip: {<<: *ip, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo-lite/geoip/apple.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}